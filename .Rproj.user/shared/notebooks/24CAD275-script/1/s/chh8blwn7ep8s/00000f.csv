"0",""
"0","  # 定義訓練控制，細化參數調優"
"0","  set.seed(1754)"
"0","  trControl <- trainControl(method = ""cv"", number = 5)"
"0","  tuneGrid <- expand.grid(size = c(8, 10, 12), "
"0","                          decay = c(0.5, 1, 3))"
"0",""
"0","  # 記錄訓練時間"
"0","  mlp_train_time <- system.time({"
"0","    mlp_model <- train(eye_detection ~ ., data = train_data_selected, "
"0","                       method = ""nnet"", "
"0","                       trControl = trControl, "
"0","                       tuneGrid = tuneGrid, "
"0","                       preProcess = c(""center"", ""scale""),"
"0","                       maxit = 1000, "
"0","                       trace = FALSE,"
"0","                       class.weights = c(""0"" = 1, ""1"" = 1))"
"0","  })"
"0",""
"0","  # 打印模型結果"
"0","  print(mlp_model)"
"1","Neural Network"
"1"," "
"1","

"
"1","816"
"1",""
"1"," samples"
"1","
"
"1"," 30"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","Pre-processing: centered (30), scaled (30)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (5 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","653, 654, 653, 652, 652"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","   8  "
"1","  0.5  "
"1","  0.8908777"
"1","  0.7817577"
"1","
"
"1","   8  "
"1","  1.0  "
"1","  0.8799022"
"1","  0.7598515"
"1","
"
"1","   8  "
"1","  3.0  "
"1","  0.7597293"
"1","  0.5196247"
"1","
"
"1","  10  "
"1","  0.5  "
"1","  0.9080786"
"1","  0.8161819"
"1","
"
"1","  10  "
"1","  1.0  "
"1","  0.8651327"
"1","  0.7303041"
"1","
"
"1","  10  "
"1","  3.0  "
"1","  0.7670613"
"1","  0.5342993"
"1","
"
"1","  12  "
"1","  0.5  "
"1","  0.9141611"
"1","  0.8283399"
"1","
"
"1","  12  "
"1","  1.0  "
"1","  0.8663752"
"1","  0.7328076"
"1","
"
"1","  12  "
"1","  3.0  "
"1","  0.7646148"
"1","  0.5293750"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were size = 12 and decay = 0.5."
"1","
"
"0","  # 預測訓練集和測試集"
"0","  train_predictions_mlp <- predict(mlp_model, newdata = train_data_selected)"
"0","  train_accuracy_mlp <- mean(train_predictions_mlp == train_data_selected$eye_detection)"
"0","  cat(""MLP Training Accuracy:"", train_accuracy_mlp, ""\n"")"
"1","MLP Training Accuracy:"
"1"," "
"1","0.9938725"
"1"," "
"1","
"
"0","  # 記錄預測時間"
"0","  mlp_predict_time <- system.time({"
"0","    test_predictions_mlp <- predict(mlp_model, newdata = test_data_selected)"
"0","  })"
"0","  test_accuracy_mlp <- mean(test_predictions_mlp == test_data_selected$eye_detection)"
"0","  cat(""MLP Test Accuracy:"", test_accuracy_mlp, ""\n"")"
"1","MLP Test Accuracy:"
"1"," "
"1","0.9215686"
"1"," "
"1","
"
"0","  # 添加混淆矩陣"
"0","  confusion_matrix_mlp <- confusionMatrix(test_predictions_mlp, test_data_selected$eye_detection)"
"0","  print(confusion_matrix_mlp)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","  0"
"1","  1"
"1","
         0"
"1"," 95"
"1","  9"
"1","
         1"
"1","  7"
"1"," 93"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9216          "
"1","
"
"1","                 95% CI :"
"1"," (0.8758, 0.9545)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5             "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.8431          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.8026          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.9314          "
"1","
"
"1","            Specificity :"
"1"," 0.9118          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9135          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.9300          "
"1","
"
"1","             Prevalence :"
"1"," 0.5000          "
"1","
"
"1","         Detection Rate :"
"1"," 0.4657          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.5098          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9216          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","  # ROC 和 AUC"
"0","  test_prob_mlp <- predict(mlp_model, newdata = test_data_selected, type = ""prob"")"
"0","  roc_mlp <- roc(as.numeric(test_data_selected$eye_detection) - 1, test_prob_mlp[,2])"
"0","  auc_mlp <- auc(roc_mlp)"
"0","  cat(""MLP AUC:"", auc_mlp, ""\n"")"
"1","MLP AUC:"
"1"," "
"1","0.9582853"
"1"," "
"1","
"
