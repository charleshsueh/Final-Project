"0"," # 定義訓練控制"
"0","  set.seed(1754)"
"0","  trControl <- trainControl(method = ""cv"", number = 5)"
"0",""
"0","  # 定義 kNN 的調優參數（k 值範圍）"
"0","  tuneGrid <- expand.grid(k = c(3, 5, 7, 9, 11))"
"0",""
"0","  # 訓練 kNN 模型"
"0","  knn_model <- train(eye_detection ~ ., data = train_data_selected,"
"0","                     method = ""knn"","
"0","                     trControl = trControl,"
"0","                     tuneGrid = tuneGrid,"
"0","                     preProcess = c(""center"", ""scale""))"
"0",""
"0","  # 打印模型結果"
"0","  print(knn_model)"
"1","k-Nearest Neighbors"
"1"," "
"1","

"
"1","816"
"1",""
"1"," samples"
"1","
"
"1"," 30"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'0', '1'"
"1"," "
"1","
"
"1","
"
"1","Pre-processing: centered (30), scaled (30)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (5 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","653, 654, 653, 652, 652"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  k "
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","   3"
"1","  0.9129496"
"1","  0.8259165"
"1","
"
"1","   5"
"1","  0.8920899"
"1","  0.7841895"
"1","
"
"1","   7"
"1","  0.8725631"
"1","  0.7451768"
"1","
"
"1","   9"
"1","  0.8700863"
"1","  0.7402144"
"1","
"
"1","  11"
"1","  0.8504388"
"1","  0.7009323"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was k = 3."
"1","
"
"0","  # 預測訓練集和測試集"
"0","  train_predictions_knn <- predict(knn_model, newdata = train_data_selected)"
"0","  train_accuracy_knn <- mean(train_predictions_knn == train_data_selected$eye_detection)"
"0","  cat(""kNN Training Accuracy:"", train_accuracy_knn, ""\n"")"
"1","kNN Training Accuracy:"
"1"," "
"1","0.9730392"
"1"," "
"1","
"
"0","  test_predictions_knn <- predict(knn_model, newdata = test_data_selected)"
"0","  test_accuracy_knn <- mean(test_predictions_knn == test_data_selected$eye_detection)"
"0","  cat(""kNN Test Accuracy:"", test_accuracy_knn, ""\n"")"
"1","kNN Test Accuracy:"
"1"," "
"1","0.9166667"
"1"," "
"1","
"
"0","  # 添加混淆矩陣"
"0","  confusion_matrix_knn <- confusionMatrix(test_predictions_knn, test_data_selected$eye_detection)"
"0","  print(confusion_matrix_knn)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","  0"
"1","  1"
"1","
         0"
"1"," 90"
"1","  5"
"1","
         1"
"1"," 12"
"1"," 97"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9167          "
"1","
"
"1","                 95% CI :"
"1"," (0.8699, 0.9507)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5             "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.8333          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.1456          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8824          "
"1","
"
"1","            Specificity :"
"1"," 0.9510          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9474          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.8899          "
"1","
"
"1","             Prevalence :"
"1"," 0.5000          "
"1","
"
"1","         Detection Rate :"
"1"," 0.4412          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.4657          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.9167          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0"," # ROC 和 AUC"
"0","  test_prob_knn <- predict(knn_model, newdata = test_data_selected, type = ""prob"")"
"0","  cat(""kNN Probability Output (First 5 Rows):\n"")"
"1","kNN Probability Output (First 5 Rows):
"
"0","  print(head(test_prob_knn))"
